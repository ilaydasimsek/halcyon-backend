# Generated by Django 4.2.4 on 2024-03-17 07:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("yoga_journeys", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MuscleGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="YogaCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="YogaChallenge",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("benefits_description", models.TextField()),
                ("cover_image_url", models.URLField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="YogaPose",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("sanskrit_name", models.CharField(help_text="Name in sanskrit language", max_length=255)),
                ("description", models.TextField()),
                (
                    "difficulty",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "chakras",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("Muladhara", "Muladhara"),
                                ("Svadhishthana", "Svadhishthana"),
                                ("Manipura", "Manipura"),
                                ("Anahata", "Anahata"),
                                ("Vishuddha", "Vishuddha"),
                                ("Ajna", "Ajna"),
                                ("Sahasrara", "Sahasrara"),
                            ],
                            max_length=64,
                        ),
                        default=list,
                        null=True,
                        size=7,
                    ),
                ),
                ("audio_url", models.URLField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True, null=True)),
                (
                    "duration",
                    models.IntegerField(
                        help_text="duration in seconds", validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("categories", models.ManyToManyField(blank=True, to="yoga_practices.yogacategory")),
                ("muscle_groups", models.ManyToManyField(blank=True, to="yoga_practices.musclegroup")),
            ],
        ),
        migrations.CreateModel(
            name="YogaPractice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("benefits_description", models.TextField()),
                ("cover_image_url", models.URLField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="YogaStyle",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="YogaPracticePose",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("order", models.PositiveSmallIntegerField(default=0)),
                (
                    "yoga_pose",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="yoga_practices.yogapose"),
                ),
                (
                    "yoga_practice",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="yoga_practices.yogapractice"),
                ),
            ],
            options={
                "ordering": ["order", "yoga_practice__title"],
                "unique_together": {("yoga_practice", "order")},
            },
        ),
        migrations.AddField(
            model_name="yogapractice",
            name="style",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="yoga_practices.yogastyle"),
        ),
        migrations.AddField(
            model_name="yogapractice",
            name="yoga_poses",
            field=models.ManyToManyField(through="yoga_practices.YogaPracticePose", to="yoga_practices.yogapose"),
        ),
        migrations.CreateModel(
            name="YogaChallengePractice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("order", models.PositiveSmallIntegerField(default=0)),
                (
                    "yoga_challenge",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="yoga_practices.yogachallenge"),
                ),
                (
                    "yoga_practice",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="yoga_practices.yogapractice"),
                ),
            ],
            options={
                "ordering": ["order", "yoga_challenge__title"],
                "unique_together": {("yoga_challenge", "order")},
            },
        ),
        migrations.AddField(
            model_name="yogachallenge",
            name="practices",
            field=models.ManyToManyField(
                through="yoga_practices.YogaChallengePractice", to="yoga_practices.yogapractice"
            ),
        ),
        migrations.CreateModel(
            name="JourneyCompletedYogaPractice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "yoga_journey",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="yoga_journeys.yogajourney"),
                ),
                (
                    "yoga_practice",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="yoga_practices.yogapractice"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JourneyActiveYogaChallenge",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("activated_at", models.DateTimeField(auto_now_add=True)),
                ("completed_yoga_practices", models.ManyToManyField(to="yoga_practices.yogapractice")),
                (
                    "yoga_challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="active_yoga_challenges",
                        to="yoga_practices.yogachallenge",
                    ),
                ),
                (
                    "yoga_journey",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="yoga_journeys.yogajourney"),
                ),
            ],
            options={
                "ordering": ["-activated_at"],
                "unique_together": {("yoga_challenge", "yoga_journey")},
            },
        ),
    ]
